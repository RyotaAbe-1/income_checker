# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

standard_reward_bymonth = [
  58000,
  68000,
  78000,
  88000,
  98000,
  104000,
  110000,
  118000,
  126000,
  134000,
  142000,
  150000,
  160000,
  170000,
  180000,
  190000,
  200000,
  220000,
  240000,
  260000,
  280000,
  300000,
  320000,
  340000,
  360000,
  380000,
  410000,
  440000,
  470000,
  500000,
  530000,
  560000,
  590000,
  620000,
  650000,
  680000,
  710000,
  750000,
  790000,
  830000,
  880000,
  930000,
  980000,
  1030000,
  1090000,
  1150000,
  1210000,
  1270000,
  1330000,
  1390000
]

first = [
  0,
  63000,
  73000,
  83000,
  93000,
  101000,
  107000,
  114000,
  122000,
  130000,
  138000,
  146000,
  155000,
  165000,
  175000,
  185000,
  195000,
  210000,
  230000,
  250000,
  270000,
  290000,
  310000,
  330000,
  350000,
  370000,
  395000,
  425000,
  455000,
  485000,
  515000,
  545000,
  575000,
  605000,
  635000,
  665000,
  695000,
  730000,
  770000,
  810000,
  855000,
  905000,
  955000,
  1005000,
  1055000,
  1115000,
  1175000,
  1235000,
  1295000,
  1355000
]

last = [
  63000,
  73000,
  83000,
  93000,
  101000,
  107000,
  114000,
  122000,
  130000,
  138000,
  146000,
  155000,
  165000,
  175000,
  185000,
  195000,
  210000,
  230000,
  250000,
  270000,
  290000,
  310000,
  330000,
  350000,
  370000,
  395000,
  425000,
  455000,
  485000,
  515000,
  545000,
  575000,
  605000,
  635000,
  665000,
  695000,
  730000,
  770000,
  810000,
  855000,
  905000,
  955000,
  1005000,
  1055000,
  1115000,
  1175000,
  1235000,
  1295000,
  1355000,
  Float::INFINITY
]

50.times do |n|
  InsuranceFee.create!(
    standard_reward_bymonth: standard_reward_bymonth[n],
    first: first[n],
    last: last[n]
  )
end